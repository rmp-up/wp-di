<?xml version="1.0"?>
<ruleset name="SAST for rmp-up/wp-di">
    <description>Static code analysis for possible vulnerabilities</description>

    <config name="installed_paths" value="etc/phpcs/vendor/pheromone/phpcs-security-audit/Security" />

    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/Test/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*.css</exclude-pattern>
    <exclude-pattern>*.js</exclude-pattern>

    <!-- Security Code Reviews Rules -->

    <!-- Global properties -->
    <!-- Please note that not every sniff uses them and they can be overwritten by rule -->
    <!-- Paranoya mode: Will generate more alerts but will miss less vulnerabilites. Good for assisting manual code review. -->
    <config name="ParanoiaMode" value="1" />

    <!-- BadFunctions -->
    <!-- PHP functions that can lead to security issues -->
    <rule ref="Security.BadFunctions.Asserts" />
    <rule ref="Security.BadFunctions.Backticks" />
    <!-- Excluded as this nags about valid things like `array_map('utf8_decode', $foo)`. -->
    <!--<rule ref="Security.BadFunctions.CallbackFunctions" />-->
    <rule ref="Security.BadFunctions.CryptoFunctions" />
    <rule ref="Security.BadFunctions.EasyRFI" />
    <rule ref="Security.BadFunctions.EasyXSS">
        <properties>
            <!-- Comment out to follow global ParanoiaMode -->
            <property name="forceParanoia" value="1" />
        </properties>
    </rule>
    <rule ref="Security.BadFunctions.ErrorHandling" />
    <!-- Excluded as this matches too often (e.g. `is_dir( $foo )`) because it does not like the variable. -->
    <!-- <rule ref="Security.BadFunctions.FilesystemFunctions"/>-->
    <rule ref="Security.BadFunctions.FringeFunctions" />
    <rule ref="Security.BadFunctions.FunctionHandlingFunctions" />
    <rule ref="Security.BadFunctions.Mysqli" />
    <rule ref="Security.BadFunctions.NoEvals" />
    <rule ref="Security.BadFunctions.Phpinfos" />
    <rule ref="Security.BadFunctions.PregReplace" />
    <rule ref="Security.BadFunctions.SQLFunctions" />
    <rule ref="Security.BadFunctions.SystemExecFunctions" />

    <!-- CVE -->
    <!-- Entries from CVE database from vendor PHP and bugs.php.net -->
    <rule ref="Security.CVE.20132110" />
    <rule ref="Security.CVE.20134113" />

    <!-- Misc -->
    <rule ref="Security.Misc.BadCorsHeader" />
</ruleset>
